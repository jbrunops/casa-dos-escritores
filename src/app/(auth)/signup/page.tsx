\"use client\";\n\nimport { useState, FormEvent } from \"react\";\nimport { useRouter } from \"next/navigation\";\nimport Link from \"next/link\";\nimport { createBrowserClient } from \"@/lib/supabase-browser\";\nimport { UserPlus, Mail, Lock, User, Loader, AlertCircle, AlertTriangle, CheckCircle } from \"lucide-react\";\n\nexport default function SignupPage() {\n    const [email, setEmail] = useState<string>(\"\");\n    const [password, setPassword] = useState<string>(\"\");\n    const [username, setUsername] = useState<string>(\"\");\n    const [error, setError] = useState<string | null>(null);\n    const [warning, setWarning] = useState<string | null>(null);\n    const [loading, setLoading] = useState<boolean>(false);\n    const [success, setSuccess] = useState<boolean>(false);\n    const router = useRouter();\n    const supabase = createBrowserClient();\n\n    const handleSubmit = async (e: FormEvent<HTMLFormElement>) => {\n        e.preventDefault();\n        setLoading(true);\n        setError(null);\n        setWarning(null);\n        setSuccess(false);\n        try {\n            if (!username || !email || !password) {\n                setError(\"Todos os campos são obrigatórios\");\n                setLoading(false);\n                return;\n            }\n            if (password.length < 6) {\n                setError(\"A senha deve ter pelo menos 6 caracteres\");\n                setLoading(false);\n                return;\n            }\n            const { data: existingUsers, error: usernameError } = await supabase\n                .from(\"profiles\")\n                .select(\"username\")\n                .eq(\"username\", username);\n            if (usernameError) {\n                setError(\"Erro ao verificar disponibilidade do nome de usuário\");\n                setLoading(false);\n                return;\n            }\n            if (existingUsers && existingUsers.length > 0) {\n                setError(\"Este nome de usuário já está em uso\");\n                setLoading(false);\n                return;\n            }\n            const { data, error: signUpError } = await supabase.auth.signUp({\n                email,\n                password,\n                options: {\n                    data: { username },\n                },\n            });\n            if (signUpError) {\n                setError(signUpError.message || \"Erro ao registrar usuário.\");\n                setLoading(false);\n                return;\n            }\n            setSuccess(true);\n            setTimeout(() => router.push(\"/login\"), 1500);\n        } catch (err: any) {\n            setError(err.message || \"Erro ao registrar usuário.\");\n        } finally {\n            setLoading(false);\n        }\n    };\n\n    return (\n        <div className=\"flex justify-center bg-white py-8 px-4 sm:px-6 lg:px-8\">\n            <div className=\"max-w-md w-full space-y-8 bg-white p-8 rounded-lg shadow-md border border-[#E5E7EB]\">\n                <div className=\"text-center\">\n                    <h1 className=\"text-3xl font-extrabold text-black\">Criar Conta</h1>\n                </div>\n                {error && (\n                    <div className=\"flex items-center gap-2 bg-red-50 border border-red-200 text-red-700 p-3 rounded\">\n                        <AlertCircle size={18} />\n                        <span>{error}</span>\n                    </div>\n                )}\n                {warning && (\n                    <div className=\"flex items-center gap-2 bg-yellow-50 border border-yellow-200 text-yellow-700 p-3 rounded\">\n                        <AlertTriangle size={18} />\n                        <span>{warning}</span>\n                    </div>\n                )}\n                {success && (\n                    <div className=\"flex items-center gap-2 bg-green-50 border border-green-200 text-green-700 p-3 rounded\">\n                        <CheckCircle size={18} />\n                        <span>Conta criada com sucesso! Verifique seu e-mail.</span>\n                    </div>\n                )}\n                <form className=\"space-y-6\" onSubmit={handleSubmit}>\n                    <div>\n                        <label htmlFor=\"username\" className=\"block text-sm font-medium text-gray-700\">\n                            Nome de Usuário\n                        </label>\n                        <div className=\"mt-1 relative rounded-md shadow-sm\">\n                            <input\n                                id=\"username\"\n                                name=\"username\"\n                                type=\"text\"\n                                autoComplete=\"username\"\n                                required\n                                className=\"appearance-none block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm placeholder-gray-400 focus:outline-none focus:ring-[#484DB5] focus:border-[#484DB5] sm:text-sm\"\n                                value={username}\n                                onChange={(e) => setUsername(e.target.value)}\n                                disabled={loading}\n                            />\n                            <User className=\"absolute right-3 top-2.5 text-gray-400\" size={18} />\n                        </div>\n                    </div>\n                    <div>\n                        <label htmlFor=\"email\" className=\"block text-sm font-medium text-gray-700\">\n                            E-mail\n                        </label>\n                        <div className=\"mt-1 relative rounded-md shadow-sm\">\n                            <input\n                                id=\"email\"\n                                name=\"email\"\n                                type=\"email\"\n                                autoComplete=\"email\"\n                                required\n                                className=\"appearance-none block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm placeholder-gray-400 focus:outline-none focus:ring-[#484DB5] focus:border-[#484DB5] sm:text-sm\"\n                                value={email}\n                                onChange={(e) => setEmail(e.target.value)}\n                                disabled={loading}\n                            />\n                            <Mail className=\"absolute right-3 top-2.5 text-gray-400\" size={18} />\n                        </div>\n                    </div>\n                    <div>\n                        <label htmlFor=\"password\" className=\"block text-sm font-medium text-gray-700\">\n                            Senha\n                        </label>\n                        <div className=\"mt-1 relative rounded-md shadow-sm\">\n                            <input\n                                id=\"password\"\n                                name=\"password\"\n                                type=\"password\"\n                                autoComplete=\"new-password\"\n                                required\n                                className=\"appearance-none block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm placeholder-gray-400 focus:outline-none focus:ring-[#484DB5] focus:border-[#484DB5] sm:text-sm\"\n                                value={password}\n                                onChange={(e) => setPassword(e.target.value)}\n                                disabled={loading}\n                            />\n                            <Lock className=\"absolute right-3 top-2.5 text-gray-400\" size={18} />\n                        </div>\n                    </div>\n                    <div>\n                        <button\n                            type=\"submit\"\n                            disabled={loading}\n                            className=\"w-full flex justify-center py-2 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-[#484DB5] hover:bg-opacity-90 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-[#484DB5] transition-all duration-300\"\n                        >\n                            {loading ? (\n                                <Loader className=\"animate-spin mr-2\" size={18} />\n                            ) : <UserPlus className=\"mr-2\" size={18} />}\n                            Criar conta\n                        </button>\n                    </div>\n                </form>\n                <div className=\"mt-6 text-center\">\n                    <Link href=\"/login\" className=\"inline-flex items-center text-[#484DB5] hover:underline\">\n                        Já tem uma conta?\n                    </Link>\n                </div>\n            </div>\n        </div>\n    );\n}\n
