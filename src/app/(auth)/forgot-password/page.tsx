\"use client\";\n\nimport { useState, FormEvent } from \"react\";\nimport Link from \"next/link\";\nimport { createBrowserClient } from \"@/lib/supabase-browser\";\nimport { Mail, Loader, AlertCircle, CheckCircle, ArrowLeft } from \"lucide-react\";\n\nexport default function ForgotPasswordPage() {\n    const [email, setEmail] = useState<string>(\"\");\n    const [error, setError] = useState<string | null>(null);\n    const [loading, setLoading] = useState<boolean>(false);\n    const [success, setSuccess] = useState<boolean>(false);\n    const supabase = createBrowserClient();\n\n    const handleSubmit = async (e: FormEvent<HTMLFormElement>) => {\n        e.preventDefault();\n        setLoading(true);\n        setError(null);\n        setSuccess(false);\n\n        try {\n            if (!email) {\n                setError(\"O campo de e-mail é obrigatório\");\n                setLoading(false);\n                return;\n            }\n            const { error: resetError } = await supabase.auth.resetPasswordForEmail(email, {\n                redirectTo: `${window.location.origin}/reset-password`,\n            });\n            if (resetError) {\n                throw resetError;\n            }\n            setSuccess(true);\n        } catch (err: any) {\n            console.error(\"Erro ao solicitar recuperação de senha:\", err);\n            setError(\n                err.message ||\n                \"Erro ao solicitar recuperação de senha. Por favor, tente novamente.\"\n            );\n        } finally {\n            setLoading(false);\n        }\n    };\n\n    return (\n        <div className=\"flex justify-center bg-white py-8 px-4 sm:px-6 lg:px-8\">\n            <div className=\"max-w-md w-full space-y-8 bg-white p-8 rounded-lg shadow-md border border-[#E5E7EB]\">\n                <div className=\"text-center\">\n                    <h1 className=\"text-3xl font-extrabold text-black\">Recuperar Senha</h1>\n                    <p className=\"mt-2 text-gray-600\">\n                        Enviaremos um link para redefinir sua senha\n                    </p>\n                </div>\n                {error && (\n                    <div className=\"flex items-center gap-2 bg-red-50 border border-red-200 text-red-700 p-3 rounded\">\n                        <AlertCircle size={18} />\n                        <span>{error}</span>\n                    </div>\n                )}\n                {success && (\n                    <div className=\"flex items-center gap-2 bg-green-50 border border-green-200 text-green-700 p-3 rounded\">\n                        <CheckCircle size={18} />\n                        <span>Verifique seu e-mail para redefinir sua senha.</span>\n                    </div>\n                )}\n                <form className=\"space-y-6\" onSubmit={handleSubmit}>\n                    <div>\n                        <label htmlFor=\"email\" className=\"block text-sm font-medium text-gray-700\">\n                            E-mail\n                        </label>\n                        <div className=\"mt-1 relative rounded-md shadow-sm\">\n                            <input\n                                id=\"email\"\n                                name=\"email\"\n                                type=\"email\"\n                                autoComplete=\"email\"\n                                required\n                                className=\"appearance-none block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm placeholder-gray-400 focus:outline-none focus:ring-[#484DB5] focus:border-[#484DB5] sm:text-sm\"\n                                value={email}\n                                onChange={(e) => setEmail(e.target.value)}\n                                disabled={loading}\n                            />\n                            <Mail className=\"absolute right-3 top-2.5 text-gray-400\" size={18} />\n                        </div>\n                    </div>\n                    <div>\n                        <button\n                            type=\"submit\"\n                            disabled={loading}\n                            className=\"w-full flex justify-center py-2 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-[#484DB5] hover:bg-opacity-90 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-[#484DB5] transition-all duration-300\"\n                        >\n                            {loading ? (\n                                <Loader className=\"animate-spin mr-2\" size={18} />\n                            ) : null}\n                            Enviar link de recuperação\n                        </button>\n                    </div>\n                </form>\n                <div className=\"mt-6 text-center\">\n                    <Link href=\"/login\" className=\"inline-flex items-center text-[#484DB5] hover:underline\">\n                        <ArrowLeft size={16} className=\"mr-1\" /> Voltar para login\n                    </Link>\n                </div>\n            </div>\n        </div>\n    );\n}\n
